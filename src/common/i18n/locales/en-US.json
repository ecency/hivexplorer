{
  "g": {
    "when": "When",
    "price": "Price"
  },
  "nav": {
    "blockchain": "Blockchain",
    "tokens": "Tokens",
    "resources": "Resources",
    "blockchain-vt": "View Txs",
    "blockchain-vb": "View Blocks",
    "blockchain-gov": "Governance",
    "blockchain-witnesses": "Witnesses",
    "blockchain-proposals": "Proposals",
    "tokens-hive": "Hive",
    "tokens-he": "Hive Engine",
    "tokens-speak": "Speak Network",
    "resources-about": "About",
    "resources-api":"API Documentation"
  },
  "home": {
    "latest_block": "Latest Blocks",
    "latest_transaction": "Latest Transaction"
  },
  "common": {
    "id": "ID",
    "about":"About",
    "facebook":"Facebook",
    "twitter":"Twitter",
    "github":"Github",
    "website":"Website",
    "youtube":"Youtube",
    "instagram":"Instagram",
    "by": "By",
    "for": "for",
    "from":"From",
    "type": "Type",
    "value": "Value",
    "block": "Block",
    "date": "Date",
    "time": "Time",
    "show": "Show",
    "less": "Less",
    "more": "More",
    "json": "Json",
    "witness": "Witness",
    "block_id": "Block ID",
    "txns": "Txns",
    "ops": "Ops",
    "timestamp": "Timestamp",
    "trx_in_block": "Trx in Block",
    "op_in_trx": "Ops in Trx",
    "req_auth": "Req. Auth",
    "req_post_auth": "Req. Posting Auth",
    "info": "Info",
    "current_mana":"Current Mmana",
    "transaction": "Transaction",
    "authorities": "Authorities",
    "transaction_num": "Trx No",
    "user_names": "User Names",
    "owner_history":"Owner History",
    "no_search_result": "No record found against searched input.",
    "transactions":"Transactions",
    "virtual_trx":"Virtual Transactions",
    "raw_format":"Raw Format "
  },
  "block": {
    "reward_fund": "Reward Fund",
    "vesting_fund": "Vesting Fund",
    "vesting_shares": "Vesting Shares",
    "supply": "Supply",
    "previous": "Previous",
    "timestamp": "timestamp",
    "extensions": "Extensions",
    "block_id": "Block ID",
    "signing_key": "Signing Key",
    "transactions":"Transactions",
    "transaction_ids": "Transaction IDs",
    "transaction_merkle_root": "Transaction Merkle Root",
    "witness_signature": "Witness Signature",
    "head_block_number": "Block Number",
    "head_block_id": "Block ID",
    "witness": "Witnesses",
    "expiration": "Expiration",
    "transaction_number": "Transation Number",
    "trx_id": "Trx Id",
    "sub_heading":"transactions in this block, produced at",
    "current_witness": "Current Witness",
    "total_pow": "Total POW",
    "num_pow_witnesses": "Num POW Witnesses",
    "virtual_supply": "Virtual Supply",
    "current_supply": "Current Supply",
    "init_hbd_supply": "Init HBD Supply",
    "current_hbd_supply": "Current HBD Supply",
    "total_vesting_fund_hive": "Total Reward Fund Hive",
    "total_vesting_shares": "Total Reward Shares",
    "total_reward_fund_hive": "Total Vesting Fund Hive",
    "total_reward_shares2": "Total Vesting Shares",
    "pending_rewarded_vesting_shares": "Pending Rewarded Vesting Shares",
    "pending_rewarded_vesting_hive": "Pending Rewarded Vesting Hive",
    "hbd_interest_rate": "HBD Interest Rate",
    "hbd_print_rate": "HBD Print Rate",
    "maximum_block_size": "Maximum block Size",
    "required_actions_partition_percent": "Required Actions Partition Percent",
    "current_aslot": "Current Aslot",
    "recent_slots_filled": "Recent Slots Filled",
    "participation_count": "Participation Count",
    "last_irreversible_block_num": "Last Irreversible Block Num",
    "vote_power_reserve_rate": "Vote Power Reserve Rate",
    "delegation_return_period": "Delegation Return Period",
    "reverse_auction_seconds": "reverse_auction_seconds",
    "available_account_subsidies": "Available Account subsidies",
    "hbd_stop_percent": "HBD Stop Percent",
    "hbd_start_percent": "HBD Start Percent",
    "next_maintenance_time": "Next Maintenance Time",
    "last_budget_time": "Last Budget Time",
    "next_daily_maintenance_time": "Next Daily Maintenance Time",
    "content_reward_percent": "Content Reward Percent",
    "vesting_reward_percent": "Vesting Reward Percent",
    "sps_fund_percent": "SPS Fund Percent",
    "sps_interval_ledger": "SPS Interval Ledger",
    "downvote_pool_percent": "Downvote Pool Percent",
    "current_remove_threshold": "Current Remove Threshold",
    "early_voting_seconds": "Early Voting Seconds",
    "mid_voting_seconds": "Mid Voting Seconds",
    "max_consecutive_recurrent_transfer_failures": "Max Consecutive Recurrent Transfer Failures",
    "max_recurrent_transfer_end_date": "Max Recurrent Transfer End Date",
    "min_recurrent_transfers_recurrence": "Min Recurrent Rransfers Recurrence",
    "max_open_recurrent_transfers": "Max Open Recurrent Transfers"
  },
  "transaction": {
    "ref_block_num": "Ref Block Num",
    "ref_block_prefix": "Ref Block Prefix",
    "expiration": "Expiration",
    "operations": "Operations",
    "extensions": "Extensions",
    "signatures": "Signatures",
    "transaction_id": "Transaction ID",
    "block_num": "Block Num",
    "transaction_num": "Transaction Num"
  },
  "heading_label": {
    "latest_transaction": "Latest Transactions",
    "search_transaction": "Search Transactions",
    "latest_block": "Latest Blocks",
    "search_block": "Search Blocks",
    "search_proposals": "Search Proposals",
    "search_witnesses": "Search Witnesses",
    "search_apis":"Search API"
  },
  "about": {
    "page_title": "About",
    "page_description": "Hivexplorer is build with ❤️ by Ecency team. <br/><br/>It is <a href='https://github.com/ecency/hivexplorer' target='_blank'>opensource block explorer</a> for <a href='https://hive.io' target='_blank'>Hive</a> blockchain. It is easy to get started API provider for Hive developers as well. <br/><br/>To support our efforts please go to <b><a href='https://ecency.com/proposals/245' target='_blank'>here</a></b> and consider voting. To reach out, please join our <a href='https://discord.me/ecency' target='_blank'>Discord channel</a>."
  },
  "table_column": {
    "type": "Type",
    "value": "Value",
    "block": "Block",
    "date": "Date",
    "time": "Time",
    "voter": "Voter",
    "percent": "Percent",
    "reputation": "Reputation",
    "rshares": "RShares",
    "witness": "Witness",
    "weight": "Weight",
    "transactions": "Transactions",
    "operations": "Operations"
  },
  "button-label": {
    "see_more_blocks": "See More Blocks",
    "see_more_transactions": "See More Transactions",
    "show_more": "Show More",
    "show_less": "Show Less",
    "show": "Show"
  },
  "user-info": {
    "id": "Id",
    "name": "Name",
    "owner": "Owner",
    "active": "Active",
    "posting": "Posting",
    "memo_key": "Memo Key",
    "json_metadata": "Json Metadata",
    "posting_json_metadata": "Posting Json Metadata",
    "proxy": "Proxy",
    "previous_owner_update": "Previous Owner Update",
    "last_owner_update": "Last Owner Update",
    "last_account_update": "Last Account Update",
    "created": "Created",
    "mined": "Mined",
    "recovery_account": "Recovery Account",
    "last_account_recovery": "Last Account Recovery",
    "reset_account": "Reset Account",
    "comment_count": "Comment Count",
    "lifetime_vote_count": "Lifetime Vote Count",
    "post_count": "Post Count",
    "can_vote": "Can Vote",
    "vote_power": "Vote Power",
    "down_vote_power": "Down Vote Power",
    "voting_manabar": "Voting Manabar",
    "downvote_manabar": "Downvote Manabar",
    "voting_power": "Voting Power",
    "resource_credits": "Resource Credits",
    "balance": "Balance",
    "savings_balance": "Savings Balance",
    "hbd_balance": "Hbd Balance",
    "hbd_seconds": "Hbd Seconds",
    "hbd_seconds_last_update": "Hbd Seconds Last Update",
    "hbd_last_interest_payment": "Hbd Last Interest Payment",
    "savings_hbd_balance": "Savings Hbd Balance",
    "savings_hbd_seconds": "Savings Hbd Seconds",
    "savings_hbd_seconds_last_update": "Savings Hbd Seconds Last Update",
    "savings_hbd_last_interest_payment": "Savings Hbd Last Interest Payment",
    "savings_withdraw_requests": "Savings Withdraw Requests",
    "reward_hbd_balance": "Reward Hbd Balance",
    "reward_hive_balance": "Reward Hive Balance",
    "reward_vesting_balance": "Reward Vesting Balance",
    "reward_vesting_hive": "Reward Vesting Hive",
    "vesting_shares": "Vesting Shares",
    "delegated_vesting_shares": "Delegated Vesting Shares",
    "received_vesting_shares": "Received Vesting Shares",
    "vesting_withdraw_rate": "Vesting Withdraw Rate",
    "post_voting_power": "Post Voting Power",
    "next_vesting_withdrawal": "Next Vesting Withdrawal",
    "withdrawn": "Withdrawn",
    "to_withdraw": "To Withdraw",
    "withdraw_routes": "Withdraw Routes",
    "pending_transfers": "Pending Transfers",
    "curation_rewards": "Curation Rewards",
    "posting_rewards": "Posting Rewards",
    "proxied_vsf_votes": "Proxied Vsf Votes",
    "witnesses_voted_for": "Witnesses Voted For",
    "last_post": "Last Post",
    "last_root_post": "Last Root Post",
    "last_vote_time": "Last Vote Time",
    "post_bandwidth": "Post Bandwidth",
    "pending_claimed_accounts": "Pending Claimed Accounts",
    "governance_vote_expiration_ts": "Governance Vote Expiration Ts",
    "delayed_votes": "Delayed Votes",
    "open_recurrent_transfers": "Open Recurrent Transfers",
    "vesting_balance": "Vesting Balance",
    "reputation": "Reputation",
    "transfer_history": "Transfer History",
    "market_history": "Market History",
    "post_history": "Post History",
    "vote_history": "Vote History",
    "other_history": "Other History",
    "witness_votes": "Witness Votes",
    "tags_usage": "Tags Usage",
    "guest_bloggers": "Guest Bloggers",
    "last_valid_time":"Last Valid Time",
    "account":"Account",
    "previous_owner_authority":"Previous Owner Authority"
  },
  "trans_table": {
    "type": "Type",
    "curator": "Curator",
    "publisher": "Publisher",
    "value": "Value",
    "virtual":"Virtual",
    "req_auths": "Active Auths",
    "posting_auths": "Posting Auths",
    "producer": "Producer",
    "voter": "Voter",
    "author": "Author",
    "benefactor": "Benefactor",
    "permlink": "Permlink",
    "weight": "Weight",
    "rshares": "RShares",
    "total_vote_weight": "Total Vote Weight",
    "owner": "Owner",
    "required_auths": "Active Auths",
    "required_posting_auths": "Posting Auths",
    "id": "ID",
    "json": "Json",
    "props": "Props",
    "creator": "Creator",
    "fee": "Fee",
    "account": "Account",
    "extensions": "Extensions",
    "reward": "Reward",
    "amount": "Amount",
    "from": "From",
    "to": "To",
    "memo": "Memo",
    "author_rewards": "Author Rewards",
    "precision": "Precision",
    "nai": "Nai",
    "memo_key": "Memo Key",
    "active": "Active",
    "posting": "Posting",
    "reward_hive": "Reward Hive",
    "reward_hbd": "Reward HBD",
    "reward_vests": "Reward Vests",
    "vesting_shares": "Vesting Shares",
    "pending_payout": "Pending Payout",
    "exchange_rate": "Exchange Rate",
    "base": "base",
    "quote": "Quote",
    "comment_author": "Comment Author",
    "comment_permlink": "Comment Permlink",
    "payout_must_be_claimed": "Payout Must Be Claimed",
    "hbd_payout": "HBD Payout",
    "hive_payout": "Hive Payout",
    "vesting_payout": "Vesting Payout",
    "payout": "Payout",
    "currency": "currency",
    "days": "Days",
    "player": "Player",
    "limit_price": "Limit Price",
    "app": "App",
    "n": "N",
    "t": "T",
    "token": "Token",
    "meme": "Memo",
    "qty": "Qty",
    "new_price": "New Price",
    "item_type": "Item Type",
    "guild_id": "Guild ID",
    "edition": "Edition",
    "plotID": "Plot ID",
    "seedID": "Seed ID",
    "trx_id": "Trx Id",
    "summoner": "Summoner",
    "secret": "Secret",
    "items": "Items",
    "version": "Version",
    "medium": "Medium",
    "reason": "Reason",
    "contractName": "Contract Name",
    "contractAction": "Contract Action",
    "market": "Market",
    "quest_id": "Quest ID",
    "amount_back": "Amount Back",
    "orderid": "Order ID",
    "total_payout_value": "Total Payout Value",
    "curator_payout_value": "Curator Payout Value",
    "beneficiary_payout_value": " Beneficiary Payout Value",
    "curators_vesting_payout": "Curators Vesting Payout",
    "initial_vesting_shares": "Initial Vesting Shares",
    "initial_delegation": "Initial Delegation",
    "to_player": "To Player",
    "from_player": "From Player",
    "parent_author":"Parent Author",
    "parent_permlink":"Parent Permlink",
    "body":"Body",
    "json_metadata":"Json Metadata",
    "hbd_exchange_rate":"HBD Exchange Rate",
    "key":"Key",
    "max_accepted_payout":"Max Accepted Payout",
    "allow_curation_rewards":"Allow Curation Rewards",
    "percent_hbd":"Percent HBD",
    "allow_votes":"Allow Votes",
    "title":"Title",
    "contractPayload":"Contract Payload",
    "symbol":"Symbol",
    "quantity":"Quantity",
    "price":"Price",
    "tournament_id":"Tournament ID",
    "signed_pw":"Signed PW",
    "payment":"Payment",
    "dec_price":"DEC Price",
    "sps_price":"SPS Price",
    "delegatees":"Delegates",
    "max_rc":"Max RC",
    "to_account":"To Account",
    "hive_vested":"HIVE Vested",
    "from_account":"From Account",
    "vesting_shares_received":"Vesting Shares Received",
    "date":"Date",
    "season":"Season",
    "cards":"Cards",
    "match_type":"Match Type",
    "bid_trx_id":"Bid Trx ID",
    "card_detail_id":"Card Detail ID",
    "gold":"Gold",
    "bcx":"BCX",
    "bid_price":"Bid Price",
    "market_account":"Market Account",
    "timestampNs":"Timestamp NS",
    "sessionId":"Session ID",
    "iris":"Iris",
    "fee_pct":"Fee PCT",
    "collection":"Collection",
    "ecrTarget":"ECR Target",
    "banStarters":"Ban Starters",
    "harderOpponents":"Harder Opponents",
    "format":"Format",
    "experimental":"Experimental",
    "minCp":"min CP",
    "modernStopAtRating":"Modern Stop At Rating",
    "stopAtRating":"Stop At Rating",
    "frequency":"Frequency",
    "banned":"Banned",
    "aggression":"Aggression",
    "autoClaim":"Auto Claim",
    "enabled":"Enabled",
    "maxLeague":"Max League",
    "maxModernLeague":"Max Modern League",
    "name":"Name",
    "quest":"Quest",
    "play":"Play",
    "monsters":"Monsters",
    "team_hash":"Team Hash",
    "all_or_none":"All or None",
    "key_auths":"key Auths",
    "account_auths":"Accounts Auths",
    "weight_threshold":"Weight Threshold",
    "posting_json_metadata":"Posting Json Metadata",
    "instances":"Instances",
    "feeSymbol":"Fee Symbol",
    "properties":"Properties",
    "class":"Class",
    "stats":"Stats",
    "0":0,
    "1":1,
    "2":2

  },
  "witnesses": {
    "id": "ID",
    "owner": "Owner",
    "created": "Created",
    "url": "URL",
    "total_missed": "Missed",
    "account_creation_fee": "Fee",
    "account_creation_feed": "Feed",
    "version": "Version",
    "more": "More",
    "votes": "Votes",
    "props": "Props",
    "maximum_block_size": "Max block Size",
    "hbd_interest_rate": "HBD Interest Rate",
    "account_subsidy_budget": "Account Subsidy Budget",
    "account_subsidy_decay": "Account Subsidy Decay",
    "virtual_last_update": "Virtual Last Update",
    "virtual_position": "Virtual Position",
    "hbd_exchange_rate": "HBD Exchange Rate",
    "base": "base",
    "quote": "Quote",
    "virtual_scheduled_time": "Virtual Scheduled Time",
    "last_aslot": "Last Aslot",
    "last_confirmed_block_num": "Last Block",
    "pow_worker": "POW Worker",
    "signing_key": "Signing Key",
    "last_hbd_exchange_update": "last HBD Exchange update",
    "last_work": "Last Work",
    "running_version": "Running Version",
    "hardfork_version_vote": "Hardfork Version Vote",
    "hardfork_time_vote": "Hardfork Time Vote",
    "available_witness_account_subsidies": "Available Witness Account Subsidies",
    "page_title": "Witnesses",
    "page_intro": "Role of witnesses or block producers in Hive blockchain is to act as the network's governance body. Community elects them to represent their voice and each user can elect up to 30 witnesses. Top 20 witnesses are producing blocks every minute while rest remain as backup witness and gets randomized chance every minute. This role is integral part of consensus mechanism blockchain runs on and recommend user engagement to vote on trusted witnesses."
  },
  "proposals": {
    "status": "Status",
    "all": "All",
    "active": "Active",
    "inactive": "Inactive",
    "upcoming": "Upcoming",
    "expired": "Expired",
    "see_all": "See All Proposals",
    "votes": "Votes",
    "page_title": "Proposals",
    "page_intro": "The Decentralized Hive Fund (DHF) is an on-chain funding mechanism that allows anyone to submit a proposal and get funding once community votes pass certain threshold."
  },
  "entry":{
    "view_response":"Viewing a response to:",
    "rendered_data":"Rendered Data",
    "votes":"Votes",
    "properties":"Properties",
    "author":"Author",
    "permlink":"Permlink",
    "category":"Category",
    "title":"Title",
    "body":"Body",
    "json_metadata":"Json Metadata",
    "created":"Created",
    "last_update":"Last Update",
    "depth":"Depth",
    "children":"Children",
    "last_payout":"Last Payout",
    "cashout_time":"Cashout Time",
    "total_payout_value":"Total Payout Value",
    "curator_payout_value":"Curator Payout Value",
    "pending_payout_value":"Pending Payout Value",
    "promoted":"Promoted",
    "replies":"Replies",
    "body_length":"Body Length",
    "author_reputation":"Author Reputation",
    "parent_author":"Parent Author",
    "parent_permlink":"Parent Permlink",
    "url":"URL",
    "root_title":"Root Title",
    "beneficiaries":"Beneficiaries",
    "max_accepted_payout":"Max Accepted Payout",
    "percent_hbd":"Percent HBD",
    "id":"ID",
    "active":"Active",
    "author_rewards":"Author Rewards",
    "max_cashout_time":"Max Cashout Time",
    "reward_weight":"Reward Weight",
    "root_author":"Root Author",
    "root_permlink":"Root Permlink",
    "allow_replies":"Allow Replies",
    "allow_votes":"Allow Votes",
    "allow_curation_rewards":"Allow Curation Rewards",
    "reblogged_by":"Reblogged By",
    "net_votes":"Net Votes",
    "children_abs_rshares":"Children Abs Rshares",
    "total_pending_payout_value":"Total Pending Payout Value",
    "total_vote_weight":"Total Vote Weight",
    "vote_rshares":"Vote Rshares",
    "net_rshares":"Net RShares",
    "abs_rshares":"Abs Rshares",
    "active_votes":"Active Votes"
  },
  "api_documentation":{
    "page_title":"Hivexplorer API",
    "page_welcome":"<p>This site is designed to aid those interested in developing applications on the <strong><a href='https://hive.io' target='_blank'>Hive</a></strong> blockchain. REST API for quickly accessing data on Hive.</p><p>The code for this site is on <a href='https://github.com/ecency/hivexplorer'>github</a>. If you’d like to see a specific improvement, you can either submit a pull request or file an issue.</p>",
    "example_url":"Example URL:",
    "example_response":"Example Response:",
    "parameters":"Parameters:"
  },
  "block_api":{
    "title":"Blocks",
    "description":"Used to query values related to the block plugin. These AppBase API methods are still under development and subject to change.",
    "head_block":"Head Block (Global Dynamic Properties)",
    "head_block_description":"Returns the current dynamic global properties. ",
    "get_block_description":"Retrieve a full, signed block of the referenced block, or null if no matching block was found.",
    "get_block_range_description":"Retrieve a range of full, signed blocks. The list may be shorter than requested if count blocks would take you past the current head block.",
    "get_block_header_description":"Retrieve a block header of the referenced block, or null if no matching block was found."
    },
  "api_transactions":{
    "title":"Transactions",
    "description":"Returns the details of the ,latest transactions, transaction by Id, by witnesses",
    "get_transaction":"Get Transaction",
    "get_transaction_description":"Returns the details of a transaction based on a transaction id. Parameters: trx_id:string"
  },
  "api_witnesses":{
    "title":"Witnesses",
    "description":"Returns the details of the witnesses, limit of witnesses etc",
    "get_witnesses_by_vote":"Get Witnesses By Vote"
  
  },
  "api_proposals":{
    "title":"Proposals",
    "description":"Returns the details about Proposals, Proposals permlinks",
    "get_proposals":"List Proposals",
    "get_proposals_description":"Returns all proposals, starting with the specified creator or start date.",
    "find_proposals":"Find Proposals (By ID)",
    "find_proposals_description":"Finds proposals by proposal.id (not proposal.proposal_id)."
  },
  "condenser_api":{
    "title":"Condenser API",
    "description":"All calls in condenser_api will return [] as the argument, as the array argument passing is opaque and implemented in the API calls themselves. They follow the current argument formatting. Existing apps should only need to skip using login_api and send all of their calls to condenser_api without any other changes required to use Appbase.",
    "get_active_votes_description":"Returns all votes for the given post.",
    "get_witnesses_by_vote_description":"Returns current witnesses by vote. ",
    "get_trending_tags_description":"Returns the list of trending tags.",
    "get_comment_discussions_by_payout_description":"Returns a list of discussions based on payout.",
    "get_discussions_by_trending_description":"Returns a list of discussions by trending.",
    "get_discussions_by_created_description":"Returns a list of discussions by created.",
    "get_discussions_by_active_description":"Returns a list of discussions based on active.",
    "get_discussions_by_votes_description":"Returns a list of discussions by votes.",
    "get_discussions_by_children_description":"Returns a list of discussions by children.",
    "get_discussions_by_hot_description":"Returns a list of discussions by hot.",
    "get_discussions_by_feed_description":"Returns a list of discussions by feed.",
    "get_discussions_by_blog_description":"Returns a list of discussions by blog.",
    "get_discussions_by_promoted_description":"Returns a list of discussions by promoted.",
    "get_state_description":"Returns the state of a path. ",
    "get_chain_properties_description":"Returns the chain properties.",
    "get_feed_history_description":"Returns the history of price feed values.",
    "get_witness_schedule_description":"Returns the current witness schedule.",
    "get_hardfork_version_description":"Returns the current hardfork version.",
    "get_next_scheduled_hardfork_description":"Returns the next scheduled hardfork.",
    "get_key_references_description":"Returns all accounts that have the key associated with their owner or active authorities.",
    "get_accounts_description":"Returns accounts, queried by name.",
    "lookup_account_names_description":"Looks up account names.",
    "lookup_accounts_description":"Looks up accounts starting with name.",
    "get_account_count_description":"Returns the number of accounts.",
    "get_conversion_requests_description":"Returns a list of conversion request.",
    "get_owner_history_description":"Returns the owner history of an account.",
    "get_recovery_request_description":"Returns the recovery request for an account.",
    "get_escrow_description":"Returns the escrow for a certain account by id.",
    "get_withdraw_routes_description":"Returns the withdraw routes for an account.",
    "get_savings_withdraw_from_description":"Returns savings withdraw from an account.",
    "get_savings_withdraw_to_description":"Returns the savings withdraw to an account.",
    "get_open_orders_descriptions":"Returns the open orders for an account.",
    "get_transaction_hex_description":"Returns a hexdump of the serialized binary form of a transaction.",
    "get_transaction_description":"Returns the details of a transaction based on a transaction id.",
    "get_content_description":"Returns the content (post or comment).",
    "get_content_replies_description":"Returns a list of replies.",
    "get_discussions_by_author_before_date_description":"Returns a list of discussions based on author before date.",
    "get_replies_by_last_update_description":"Returns a list of replies by last update.",
    "get_witnesses_description":"Returns current witnesses.",
    "get_witness_by_account_description":"Returns the witness of an account.",
    "lookup_witness_accounts_description":"Looks up witness accounts starting with name.",
    "get_vesting_delegations_description":"Returns the vesting delegations by an account.",
    "get_version_description":"Returns the compile time versions of blockchain, hived, FC. Also returns the boot time version of the chain id (may be different from compile time value only when looking at a testnet).",
    "get_feed_entries_description":"eturns a list of entries in an account’s feed.",
    "get_feed_description":"Returns a list of items in an account’s feed.",
    "get_blog_description":"Returns the list of blog entries for an account.",
    "get_account_reputations_description":"Returns a list of account reputations.",
    "get_reblogged_by_description":"Returns a list of authors that have reblogged a post.",
    "get_blog_authors_description":"Returns a list of authors that have had their content reblogged on a given blog account.",
    "broadcast_transaction_description":"Used to broadcast a transaction.",
    "broadcast_transaction_synchronous_description":"Used to broadcast a transaction and waits for it to be processed synchronously.",
    "get_discussions_by_comments_description":"Returns a list of discussions by comments.",
    "get_reward_fund_description":"Returns information about the current reward funds.",
    "get_followers_description":"Returns the list of followers for an account. ",
    "get_following_description":"Returns the list of accounts that are following an account.",
    "get_follow_count_description":"Returns the count of followers/following for an account."
  },
  "account_history_api":{
    "title":"Account History API",
    "description":"Used to lookup account history information. These AppBase API methods are still under development and subject to change.",
    "get_ops_in_block_description":"Returns all operations contained in a block.",
    "get_account_history_description":"Returns a history of all operations for a given account."

  },
  "database_api":{
    "title":"Database API",
    "description":"Used to query information about accounts, transactions, and blockchain data.",
    "find_proposals_description":"Finds proposals by proposal.id (not proposal.proposal_id).",
    "get_proposals_description":"Returns all proposals, starting with the specified creator or start date.",
    "get_config_description":"Returns information about compile-time constants. ",
    "get_order_book_description":"Returns the order book.",
    "get_required_signatures_description":"This API will take a partially signed transaction and a set of public keys that the owner has the ability to sign for and return the minimal subset of public keys that should add signatures to the transaction.",
    "get_potential_signatures_description":"This method will return the set of all public keys that could possibly sign for a given transaction.",
    "verify_authority_description":"Returns true if the transaction has all of the required signatures.",
    "list_votes_description":"Returns all votes, starting with the specified voter and/or author and permlink.",
    "get_active_witnesses_description":"Returns the list of active witnesses.",
    "get_reward_funds_description":"Returns information about the current reward funds.",
    "list_proposal_votes_description":"Returns all proposal votes, starting with the specified voter or proposal",
    "find_rc_accounts_description": "Returns accounts, queried by name."
  },
  "rc_api":{
    "title":"RC API",
    "description":"Allows querying of various Resource Credit metrics.",
    "find_rc_accounts_description":"Returns the available resource credits of accounts.",
    "get_witnesses_by_vote_description":"Returns accounts, queried by name.",
    "get_rc_stats": "Get RC stats"
  },
  "bridge":{
    "title":"Bridge API",
    "description":"Presents data interpreted by the hivemind database as JSON-RPC.",
    "get_discussion_description":"Gives a flattened discussion tree starting at given post.",
    "get_community_description":"Gets community details.",
    "list_communities_description":"Gets community information",
    "get_post_description":"Gives single selected post.",
    "get_profile_description":"Gets profile information.",
    "get_account_posts_description":"Lists posts related to a given account.",
    "get_trending_topics_description": "Get trending topics/categories."
  },
  "transaction_status_api":{
    "title":"Transaction Status API",
    "description":"This API is intended to evaluate a transaction status after calling condenser_api.broadcast_transaction.",
    "find_transaction_description":"Returns the status of a given transaction id."
  },
  "network_broadcast_api":{
    "title":"Network Broadcast API",
    "description":"Used to broadcast transactions and blocks. These AppBase API methods are still under development and subject to change."
  },
  "market_history_api":{
    "title":"Market History API",
    "description":"Used to lookup market history information. These AppBase API methods are still under development and subject to change.",
    "get_ticker_description":"Returns the market ticker for the internal HBD:HIVE market.",
    "get_volume_description":"Returns the market volume for the past 24 hours.",
    "get_trade_history_description":"Returns the trade history for the internal HBD:HIVE market.",
    "get_recent_trades_description":"Returns the most recent trades for the internal HBD:HIVE market.",
    "get_market_history_description":"Returns the market history for the internal HBD:HIVE market.",
    "get_market_history_buckets_description":"Returns the bucket seconds being tracked by the plugin.",
    "get_ranked_posts_description":"Gets ranked posts.",
    "account_notifications_description":"Account notifications information.",
    "list_all_subscriptions_description":"List all subscriptions, titles, and roles to a community for an account.",
    "list_subscribers_description":"Gets a list of subscribers for a given community.",
    "get_follow_list_description":"Returns blacklisted/muted accounts or list of blacklists/mute lists followed by a given observer.",
    "get_relationship_between_accounts_description":"Tells what relations connect given accounts from the perspective of first account.",
    "does_user_follow_any_lists_description":"Checks if a given observer follows any blacklists or mute lists."
 },
 "operation_type":{
    "custom_json_operation":"Custom Json",
    "vote_operation":"Vote Operation",
    "effective_comment_vote_operation":"Effective Comment Vote Operation",
    "producer_reward_operation":"Producer Reward Operation",
    "sm_refresh_quest":"requested a new quest",
    "sm_start_quest":"started a daily quest",
    "sm_claim_reward":"claimed quest reward",
    "sm_combine_cards":"combine cards",
    "sm_gift_cards":"gifts cards",
    "sm_sell_cards":"list cards for sale on the market",
    "sm_combine_all":"combine all cards",
    "sm_submit_team":"submitted a team for battle",
    "account_update_operation":"update account data"
    
 }
}
